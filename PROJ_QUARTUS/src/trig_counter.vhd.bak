library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity trig_counter is
    port (
        freq_vent_i : in std_logic;
        clk_i : in std_logic;
        nb_periode_o : out std_logic 
    );
end entity trig_counter;

architecture rtl of trig_counter is
    signal front_montant,srst_i : std_logic;
    signal cpt0_q : std_logic_vector(25 downto 0);
begin

   
--instance trigger
  trigger_inst : entity work.trigger
  generic map (
    C_ASYNC => TRUE
  )
  port map (
    freq_vent_i => freq_vent_i,
    clk_i => clk_i,
    bool_trigger_o => front_montant
  );

  --instance counter
  counter_inst : entity work.counter
  generic map (
    N => 6
  )
  port map (
    arst_i => '0',
    clk_i => clk_i,
    srst_i => srst_i,
    en_i => front_montant,
    q_o => cpt0_q
  );

  nb_periode_o <= 
  '1' when  cpt0_q = '1' or cpt0_q = '5' else 
  '0'
  srst_i <=
  '1' when cpt0_q > '5' else 
  '0'
    
end architecture rtl;